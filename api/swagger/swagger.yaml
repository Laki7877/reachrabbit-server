swagger: "2.0"
info:
  version: "0.0.1"
  title: ProjectX
host: localhost:3000
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    x-swagger-router-controller: AuthController
    post:
      description: Login with username and password
      parameters:
        - name: Login
          in: body
          description: Login Form
          required: true
          schema:
            $ref: "#/definitions/AuthRequest"
      responses:
        "200":
          description: JWT Authentication token
          schema:
            $ref: "#/definitions/AuthResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    x-swagger-router-controller: UserController
    get:
      security:
        - JWT: []
      description: Return User Object
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        "200":
          description: Successfully found
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: UserController
    post:
      description: Create User Object
      parameters:
        - name: user
          in: body
          description: User Object
          required: true
          schema: 
            $ref: "#/definitions/UserRequest"
      responses:
        "200":
          description: Successfully found
          schema:
            $ref: "#/definitions/UserResponse"
        default:
          $ref:
            "#/responses/Error"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  AuthRequest:
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  AuthResponse:
    required:
      - token
    properties:
      token:
        type: string
  UserRequest:
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  UserResponse:
    required:
      - username
    properties:
      username:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
responses:
  Error:
    description: General Error Response
    schema:
      $ref: "#/definitions/ErrorResponse"
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    description: 
      JSON web token obtained from auth endpoint. This token should be attached to header with **Bearer** prefix
    in: header