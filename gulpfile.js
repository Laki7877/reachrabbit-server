/**
 * gulp entry point
 *
 * @author     Poon Wu <poon.wuthi@gmail.com>
 * @since      0.0.1
 */
'use strict';

require('dotenv').config();

var _ = require('lodash'),
	gulp = require('gulp-help')(require('gulp')),
	gutil = require('gulp-util'),
	path = require('path'),
	exec = require('child_process').exec,
  plugins = require('gulp-load-plugins')({
      pattern: ['gulp-*', 'gulp.*'],
      replaceString: /\bgulp[\-.]/
  }),
  args = require('yargs').argv;

// lint
gulp.task('lint', 'Lint all server side js', function() {
	return gulp.src(['./**/*.js', '!./node_modules/**/*.js'])
		.pipe(plugins.jshint())
		.pipe(plugins.jshint.reporter(require('jshint-stylish')));
});

// run express-swagger app
gulp.task('start', 'Start express app', function(cb) {
	var task = exec('swagger project start', {}, function(err) {
		cb(err);
	});
	task.stderr.pipe(process.stderr);
	task.stdout.pipe(process.stdout);
});

// run swagger edit mode
gulp.task('edit', 'Start swagger edit mode', function(cb) {
	var task = exec('swagger project edit', {}, function(err) {
		cb(err);
	});
	task.stderr.pipe(process.stderr);
	task.stdout.pipe(process.stdout);
});

gulp.task('autogen:migrations', 'Autogenerate migration files for all models', function() {
  var db = require('./api/models');
  var fs = require('fs');

  // check if there's flag for singular model
  var isModel = function(model, key) {
    return args.model ? key === args.model || model.tableName === args.model : true;
  }

  // each model
  _.forIn(db, function(model, key) {
    if(key !== 'Sequelize' && key !== 'sequelize' && isModel(model, key)) {
      // tablename
      var tableName = model.tableName;

      /* jshint quotmark: true */
      var template = "/**\n * Migration for table: " + tableName + "\n * Autogenerated by gulp task\n */\n'use strict';\n\nvar model = require('../models')."+ key +";\n\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable(model.tableName, model.attributes);\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable(model.tableName);\n  }\n};";


      if(tableName !== undefined) {
        var date = new Date();
        var filename = [date.getFullYear(), date.getMonth()+1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()]
          .map(function(num) {
            return num <= 60 && (num + 100).toString().substring(1) || num;
          })
          .join('') + '-create-' + _.lowerCase(tableName);
        fs.writeFileSync('./api/migrations/' + filename + '.js', template);
      }
    }
  });
}, {
  aliases: ['gm', 'GM'],
  options: {
    model: 'Only migrate specific model'
  }
});
