# App Resource
app.dashboard.history.days=120

# Server
server.env=test

# Redis Cache
redis.cache.host=127.0.0.1
redis.cache.port=6379
redis.cache.expiration.second=86400

# Email
email.admin=admin@reachrabbit.com
email.mailgun.apiKey=key-16698456d07574ddd7e8c86b075e248c
email.mailgun.host=reachrabbit.com
email.mailgun.from=ReachRabbit <no-reply@reachrabbit.com>

#UI
ui.host=http://edward.reachrabbit.com/

# Hash Password
reachrabbit.salt.workload=12

# JWT
reachrabbit.jwt.issuer=reachrabbit.com
reachrabbit.jwt.expire.hour=24
reachrabbit.jwt.expire.minute=0
reachrabbit.jwt.expire.second=0

# Pagination
spring.data.rest.defaultPageSize=10
spring.data.rest.maxPageSize=100

multipart.maxFileSize=-1
multipart.maxRequestSize=1024Mb

business.commission.rate=0.18
business.commission.fee=0


# Social Media
facebook.appKey=295474977484568
facebook.appSecret=c9d638decea3b950823733194c229c74
youtube.appKey=857823447529-5c419ec75nq2q3tf1ouq07bdu49g89ks.apps.googleusercontent.com
youtube.appSecret=Z9TASelbdQLy2sINMmA5xL1S
youtube.apiKey=AIzaSyBObD2Aa3VUOMml1myzUALd8bmb4Zlg-fk
instagram.appKey=a6f7209e17af45259b61ba189bf9502e
instagram.appSecret=fd6a14a32eb24bc09d2fd2dfde38b178

# you can get into iam page [https://console.aws.amazon.com/iam/home]
cloud.aws.credentials.accessKey=AKIAIEMT7NOW4XSK2F5A
cloud.aws.credentials.secretKey=FefUez+Qzq2KCEI0JUlS/R3PPD12QOUCO/5MSnCg

# example : ap-northeast-1
cloud.aws.region=ap-southeast-1

# example : s3-bucket-test-1
cloud.aws.s3.bucket=reachrabbit-test
cloud.aws.s3.bucket.backup=reachrabbit-db-backup/backup/


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/reachrabbitdb?useSSL=false&characterEncoding=UTF-8
spring.datasource.connectionProperties=useUnicode=true;characterEncoding=utf-8;

spring.data.mongodb.uri = mongodb://localhost/reachrabbitdb

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.hibernate.connection.useUnicode = true

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
